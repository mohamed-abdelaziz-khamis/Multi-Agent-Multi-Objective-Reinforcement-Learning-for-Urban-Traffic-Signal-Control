/*-----------------------------------------------------------------------
 * Copyright (C) 2011 Mohamed A. Khamis, EJUST
 *
 * This program (class) is free software.
 * You may redistribute it and/or modify it under the terms
 * of the GNU General Public License as published by
 * the Free Software Foundation (version 2 or later).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *------------------------------------------------------------------------*/

package gld.distributions;

/** 
 * @description A Program to simulate the values generated by Weibull (alpha, beta) random variable 
 * using a Uniform random variable (Inverse Transform Method)
 * 
 *  Density function is: 
 *  	f(x) = alpha * beta^(-alpha) * x^(alpha-1) * e^[-(x/beta)^alpha],	if x>0
 *  		 0, otherwise
 *  
 *  CDF is F(x) = integration{-infinite, x} f(t) dt = 1-e^[-(x/beta)^alpha], if x>0
 *  			0, otherwise 			
 *  
 *  Solve U = F(X) for X = beta * [- ln (1-U)]^(1/alpha)
 * */
public class RandomWeibull {
	/**
	 * @param Alpha > 0 and Beta > 0
	 */
	public static double getWeibull (double alpha, double beta){				
		return beta*Math.pow(-Math.log(RandomUniform.getUniform(0, 1)), 1/alpha);		
	}
}
