/*-----------------------------------------------------------------------
 * Copyright (C) 2011 Mohamed A. Khamis, EJUST
 *
 * This program (class) is free software.
 * You may redistribute it and/or modify it under the terms
 * of the GNU General Public License as published by
 * the Free Software Foundation (version 2 or later).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *------------------------------------------------------------------------*/

package gld.distributions;

/** 
 * @description A Program to simulate the values generated by Triangular (a, b, c) random variable 
 * using a Uniform random variable (Inverse Transform Method)
 *    
 **/
public class RandomTriangular {
	/**
	 * @param a: [-infinite, infinite]
	 * @param b: a < b
	 * @param c: a <= c <= b
	 */
	public static double getTriangular (double a, double b, double c){				
		double uniformRandomVariate = RandomUniform.getUniform(0, 1);
		double cdfOfc = (c-a)/(b-a);
		if (uniformRandomVariate>0 && uniformRandomVariate <cdfOfc)
			return a + Math.sqrt(uniformRandomVariate * (b-a) * (c-a));
		else //(uniformRandomVariate>=cdfOfc && uniformRandomVariate <1)
			return b - Math.sqrt((1-uniformRandomVariate) * (b-a) * (b-c));
	}
}
